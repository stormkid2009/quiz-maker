
/// Prisma Client generator for database operations.
generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

/// MongoDB datasource configuration (env: DATABASE_URL).
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

/// Embedded type representing questions related to a passage.
type PassageRelatedQuestion {
  content     String
  options     String[]
  rightAnswer String[]
  type        String
}

/// Model representing composition questions for writing exercises.
model Composition {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  answer    String
  content   String
  createdAt DateTime @db.Date
  elements  String[]
  type      String
  updatedAt DateTime @db.Date
  @@index([type])
  @@map("compositions")
}

/// Model representing grammar questions.
model Grammaire {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  createdAt   DateTime @db.Date
  options     String[]
  rightAnswer String[]
  type        String
  updatedAt   DateTime @db.Date
  @@index([type])
  @@map("grammaires")
}

/// Model representing reading passages with nested related questions.
model Passage {
  id               String                  @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime                @db.Date
  passage          String
  relatedQuestions PassageRelatedQuestion[]
  type             String
  updatedAt        DateTime                @db.Date
  @@index([type])
  @@map("passages")
}

/// Model representing situation-based multiple choice questions.
model Situation {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  content      String
  createdAt    DateTime @db.Date
  options      String[]
  rightAnswer  String[] // Standardized to match grammaires
  type         String
  updatedAt    DateTime @db.Date
  @@index([type])
  @@map("situations")
}

/// Model representing application user accounts.
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  email     String   @unique
  password  String
  updatedAt DateTime @db.Date // Added for consistency
  @@map("users")
}
